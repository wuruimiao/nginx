
# Copyright (C) Nginx, Inc.


if [ $USE_THREADS = YES ]; then

    if [ "$NGX_PLATFORM" = win32 ]; then
        cat << END

$0: --with-threads is not supported on Windows

END
        exit 1
    fi
    # 首先向objs/ngx_auto_config.h头文件中写入相关宏定义，然后再把相应的源代码文件包含到CORE_DEPS和CORE_SRCS中:

    have=NGX_THREADS . auto/have
    CORE_DEPS="$CORE_DEPS $THREAD_POOL_DEPS"
    CORE_SRCS="$CORE_SRCS $THREAD_POOL_SRCS"
    CORE_LIBS="$CORE_LIBS -lpthread"
    NGX_LIBPTHREAD="-lpthread"
fi

# 注意： 虽然nginx整体上是一个异步、事件驱动的框架。
# 但是很多第三方模块使用了阻塞调用；即使在当前官方的NGINX代码中，依然无法在全部场景中避免使用阻塞，Nginx1.7.11中实现的线程池机制解决了这个问题。

